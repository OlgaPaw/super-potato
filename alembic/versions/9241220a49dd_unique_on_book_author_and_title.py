"""Unique on book author and title

Revision ID: 9241220a49dd
Revises: 95dbaaf49269
Create Date: 2022-11-01 11:25:05.418488

"""
from alembic import op

# revision identifiers, used by Alembic.
revision = '9241220a49dd'
down_revision = '95dbaaf49269'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_books_title', table_name='books')
    op.create_index(op.f('ix_books_title'), 'books', ['title'], unique=False)
    # op.create_unique_constraint('book_author_title_unique', 'books', ['title', 'author_id'])
    # ### end Alembic commands ###

    # Manually add unique constrain
    with op.batch_alter_table('books', recreate='always') as batch_op:
        batch_op.create_unique_constraint( # type: ignore
            columns=['title', 'author_id'],
            constraint_name='book_author_title_unique',
        )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_constraint('book_author_title_unique', 'books', type_='unique')
    op.drop_index(op.f('ix_books_title'), table_name='books')
    op.create_index('ix_books_title', 'books', ['title'], unique=False)
    # ### end Alembic commands ###

    # Manually rm unique constrain
    with op.batch_alter_table('books', recreate='always') as batch_op:
        batch_op.drop_constraint('book_author_title_unique')  # type: ignore
